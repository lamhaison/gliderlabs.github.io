<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Glider Labs - company</title>
  <subtitle>Infrastructure building blocks designed for humans</subtitle>
  <id>http://gliderlabs.com/blog</id>
  <link href="http://gliderlabs.com/blog"/>
  <link href="http://gliderlabs.com/blog/tags/company.xml" rel="self"/>
  <updated>2015-08-10T13:55:00-05:00</updated>
  <author>
    <name>Glider Labs</name>
    <email>team@gliderlabs.com</email>
  </author>
  <entry>
    <title>DockerCon 2015 happened.</title>
    <link rel="alternate" href="http://gliderlabs.com/blog/2015/07/20/dockercon-2015-happened/"/>
    <id>http://gliderlabs.com/blog/2015/07/20/dockercon-2015-happened/</id>
    <published>2015-07-20T09:44:00-05:00</published>
    <updated>2015-08-10T13:24:13-05:00</updated>
    <author>
      <name>Glider Labs</name>
    </author>
    <content type="html">&lt;p&gt;This year we attended the second annual DockerCon in San Francisco. We almost didn&amp;rsquo;t, as our proposed talks were passed on. My abstracts are often generic sounding placeholders, so I don&amp;rsquo;t blame the conference organizers for skipping over an original Docker team member. Regardless, a month before the event, I got an invitation to moderate lightning talks, as well as to give one.&lt;/p&gt;

&lt;p&gt;Separately, our work with Docker, ClusterHQ, and Weaveworks on Docker plugins was announced at the keynote. They gave the three of us a session to introduce Docker plugins in more detail. ClusterHQ has &lt;a href="https://clusterhq.com/2015/07/01/docker-plugins-complete-the-puzzle/"&gt;a nice write-up&lt;/a&gt;, though The New Stack also has &lt;a href="http://thenewstack.io/the-real-docker-ecosystem-launches-with-plugins/"&gt;a good write-up&lt;/a&gt; as industry press. I was just pleasantly surprised to see the Glider Labs logo in Solomon&amp;rsquo;s keynote. (However, I&amp;rsquo;m not sure why Mesosphere is mentioned at all.)&lt;/p&gt;

&lt;p&gt;&lt;img alt="Conway's Life" src="/images/dockercon2015.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Besides that it was really great to hear from so many people using Glider Labs projects. Our Alpine image is definitely a hit. We saw a number of Docker employees using it in their demos. Talking to vendors at the booths, it seemed 90% of them were using a Glider Labs project of some kind, whether Alpine, Registrator, or Logspout. This is especially exciting because these projects are just the beginning.&lt;/p&gt;

&lt;p&gt;The lightning talks were also fun. I used my lightning talk as an excuse to put together a proof of concept for a project now called Envy. It&amp;rsquo;s a sort of development environment manager, re-envisioning the idea of development environments with containers. I believe somebody suggested it could be a Vagrant killer? I gave the demo several times at DockerCon and it was quite well received.&lt;/p&gt;

&lt;p&gt;Definitely looking forward to next year!&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/131329120" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <title>Weave Sponsors Glider Labs Service Discovery Projects</title>
    <link rel="alternate" href="http://gliderlabs.com/blog/2015/04/22/weave-sponsors-glider-labs-service-discovery-projects/"/>
    <id>http://gliderlabs.com/blog/2015/04/22/weave-sponsors-glider-labs-service-discovery-projects/</id>
    <published>2015-04-22T18:23:00-05:00</published>
    <updated>2015-08-10T13:23:12-05:00</updated>
    <author>
      <name>Jeff Lindsay</name>
    </author>
    <content type="html">&lt;p&gt;Today we&amp;rsquo;re happy to introduce &lt;a href="http://weave.works/"&gt;Weaveworks&lt;/a&gt;, authors of &lt;a href="https://github.com/weaveworks/weave"&gt;Weave&lt;/a&gt;, as our newest sponsor. This sponsorship will most immediately support development and increased releases of &lt;a href="https://github.com/gliderlabs/registrator"&gt;Registrator&lt;/a&gt;, our Docker service discovery bridge. It also enables us to release a few new projects in this space over the next couple months.&lt;/p&gt;

&lt;p&gt;This six month sponsorship not only supports our work, but the joint effort across vendors to help Docker become more extensible. Along with Weaveworks, we&amp;rsquo;re among a few working with Docker to help design a plugin system, initially allowing basic extension points around networking and volumes.&lt;/p&gt;

&lt;p&gt;It also means we&amp;rsquo;ll be exploring integration with various Weave components, such as Registrator with &lt;a href="https://github.com/weaveworks/weave/tree/master/weavedns"&gt;WeaveDNS&lt;/a&gt;. We&amp;rsquo;ll also be sharing some of the use cases with current and future Weave services for Docker software networking.&lt;/p&gt;

&lt;p&gt;Besides our consulting and system integration services, Glider Labs is an independent systems R&amp;amp;D lab. Our open source work towards unraveling the &lt;a href="http://gliderlabs.com/blog/2015/03/24/the-modern-systems-software-mess/"&gt;modern systems mess&lt;/a&gt; is made possible by sponsorships like this. If your organization is interested in supporting our work the way Weaveworks has, please &lt;a href="mailto:team+sponsor@gliderlabs.com"&gt;let us know&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>What have we been doing for 40 years?</title>
    <link rel="alternate" href="http://gliderlabs.com/blog/2015/04/08/what-have-we-been-doing-for-40-years/"/>
    <id>http://gliderlabs.com/blog/2015/04/08/what-have-we-been-doing-for-40-years/</id>
    <published>2015-04-07T22:29:00-05:00</published>
    <updated>2015-08-10T13:23:03-05:00</updated>
    <author>
      <name>Jeff Lindsay</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src="/images/xerox_parc_1975.jpg" title="Xerox PARC, 1975 via Computer History Museum" /&gt;&lt;/p&gt;

&lt;p&gt;Desktop computing, graphical user interfaces, object-oriented programming, laser printing, Ethernet. Pillars of modern computing invented by only 25 people over 5 years at one place: Xerox PARC.&lt;/p&gt;

&lt;p&gt;Unix and C. Foundations of modern systems software initially developed by just 2 people over 3 years at one place: Bell Labs.&lt;/p&gt;

&lt;p&gt;Both happened in the early 1970s. &lt;em&gt;That was over 40 years ago.&lt;/em&gt; What exactly have the rest of us been doing since?&lt;/p&gt;

&lt;p&gt;&amp;ldquo;We&amp;rsquo;ve been looking at photos of cats!&amp;rdquo; Okay, but really.&lt;/p&gt;

&lt;p&gt;The startup world responds half-jokingly, and perhaps with an air of trademark Silicon Valley superiority, &amp;ldquo;Um, we&amp;rsquo;ve been innovating? You know, bringing all this to market and making it easier to use?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;They&amp;rsquo;re right! We&amp;rsquo;ve been innovating. That doesn&amp;rsquo;t sound so bad, does it? It&amp;rsquo;s not, but there is a big difference between invention and innovation. &lt;strong&gt;The problem is that innovation feeds on invention, and we&amp;rsquo;ve been feeding on the same inventions for 40 years.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Consumers are not complaining. In fact, they&amp;rsquo;re eating it up. Innovation is clearly where the money is and there&amp;rsquo;s plenty more. Now anybody in Silicon Valley that claims to be inventing is usually lying. Most are proud &lt;em&gt;not&lt;/em&gt; to be inventing.&lt;/p&gt;

&lt;p&gt;Some say Google X is the new Xerox PARC. No way. Google X is about sexy commercial applications that are extremely risky. Xerox PARC was about researchers&amp;rsquo; independent curiosity and vision. One was set up for &amp;ldquo;pie in the sky&amp;rdquo; innovation, the other was set up for &amp;ldquo;blue sky&amp;rdquo; &lt;em&gt;invention&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Interestingly, systems software and tooling naturally gets more attention when allowed blue sky invention. Put a bunch of computer scientists together and let them do whatever they want. What are they going to do? Odds are they&amp;rsquo;ll design a new programming language. Exactly! I know that&amp;rsquo;s not particularly ideal, but it reveals the inherent bias. Compare that scenario with them being tasked to change the world.&lt;/p&gt;

&lt;p&gt;Innovation is great. I&amp;rsquo;m not trying to devalue the work we&amp;rsquo;ve done since the 70s. However, this obsession with innovation clearly devalues invention. Moreover, looking at what are effectively the same tools after 40 years, my concern is that lack of invention stifles major progress in systems software.&lt;/p&gt;

&lt;p&gt;The good news is that we&amp;rsquo;ve seen it could only take a handful of people in the right place with the right incentives to make another leap. It just most likely won&amp;rsquo;t be VC backed.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Modern Systems Software Mess</title>
    <link rel="alternate" href="http://gliderlabs.com/blog/2015/03/24/the-modern-systems-software-mess/"/>
    <id>http://gliderlabs.com/blog/2015/03/24/the-modern-systems-software-mess/</id>
    <published>2015-03-24T18:16:00-05:00</published>
    <updated>2015-08-10T13:22:52-05:00</updated>
    <author>
      <name>Jeff Lindsay</name>
    </author>
    <content type="html">&lt;p&gt;In August 2000, while Rob Pike was still at Bell Labs and before he co-developed Go, he gave a talk called &lt;a href="http://doc.cat-v.org/bell_labs/utah2000/"&gt;Systems Software Research is Irrelevant&lt;/a&gt;. Today the situation is perhaps not as dire. At the very least, his examples are noticeably dated. However, many of his points remain true and point at systemic roadblocks to better systems software.&lt;/p&gt;

&lt;p&gt;His main point was that academic research around systems software had lost the influence on industry it once had. The rise of Google and its academically inclined engineering culture is maybe the biggest shift since this talk. Google has applied and published great research on software systems, particularly around distributed systems.&lt;/p&gt;

&lt;p&gt;That said, there are points from this talk that resonate with and inspire people like us trying to fill the void of modern systems R&amp;amp;D.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Startups are too focused on short time scale and practical results to try new things.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At first I thought, &amp;ldquo;That&amp;rsquo;s not true!&amp;rdquo; Then I realized what startups really do is often take the opportunity to apply &lt;em&gt;recent&lt;/em&gt; ideas (ie Docker), but rarely do they (nor should they) try to &lt;em&gt;invent&lt;/em&gt; novel approaches to systems.&lt;/p&gt;

&lt;p&gt;Instead, invention most often comes from organizations large enough to necessitate invention for their particular problem and scale, or startup vendors that are trying to sell a shiny new solution. This has yielded great papers, best practices, and open source software, but in all cases these are independent solutions to specific problems.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Go back to thinking about and &lt;em&gt;building systems&lt;/em&gt;. Narrowness is irrelevant; breadth is relevant: it&amp;rsquo;s the essence of &lt;em&gt;system&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;No one vendor will provide a solution for your entire system. There are virtualization vendors, CI vendors, source control vendors, operating system vendors, configuration management vendors, database vendors, container management vendors, and on and on.&lt;/p&gt;

&lt;p&gt;Whether these are hosted services or commercially supported open source software, none of them will ever solve (read: own) the system. No matter what they think or what they tell you.&lt;/p&gt;

&lt;p&gt;Instead, we collectively share best practices and loosely converge on similar system architectures. But who has the incentive and business platform that can support &lt;em&gt;systemic&lt;/em&gt; innovation?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There has been much talk about component architectures but only one true success: Unix pipes. It should be possible to build interactive and distributed applications from piece parts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If there is a guiding hypothesis behind the Glider Labs approach to building systems, this is it. Rarely does this get a chance to be fully explored.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>A Pattern Emerges</title>
    <link rel="alternate" href="http://gliderlabs.com/blog/2015/03/04/a-pattern-emerges/"/>
    <id>http://gliderlabs.com/blog/2015/03/04/a-pattern-emerges/</id>
    <published>2015-03-04T12:29:00-06:00</published>
    <updated>2015-08-10T13:22:24-05:00</updated>
    <author>
      <name>Jeff Lindsay</name>
    </author>
    <content type="html">&lt;p&gt;It may not be obvious, but Glider Labs is named after the glider pattern in &lt;a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life"&gt;Conway&amp;rsquo;s Life&lt;/a&gt;. If you&amp;rsquo;re not familiar, Conway&amp;rsquo;s Life is a popular cellular automaton that exhibits how simple rules can lead to complex behavior.&lt;/p&gt;

&lt;p&gt;Specifically, Conway&amp;rsquo;s Life is a simple simulation with cells that can either be on or off at each step. Every step, four simple rules are executed dealing with the state of a cell&amp;rsquo;s neighbors. From this, you get what seems to be a disproportionate amount of rich, dynamic behavior.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Conway's Life" src="http://media.giphy.com/media/8Ar9S6zEFjJiU/giphy.gif" /&gt;&lt;/p&gt;

&lt;p&gt;Key takeaways from Conway&amp;rsquo;s Life are about complexity and emergence. A well constructed initial pattern of only a few cells in Life can grow into an entire ecosystem of interesting patterns.&lt;/p&gt;

&lt;p&gt;A minor change to the initial pattern has a tremendous effect on how the pattern evolves. While the system is deterministic, the dynamics of it are not terribly intuitive. You rarely know how a change will cascade through the lifespan of a Life simulation unless you built it up from scratch yourself.&lt;/p&gt;

&lt;p&gt;Murphy&amp;rsquo;s law is an unavoidable truth in operations and reliability engineering. Root cause analysis usually proves major system failures not to be random, but an unexpected series of smaller, cascading failures. This is the nature of failure and predictability in complex systems, and it&amp;rsquo;s fascinating how well this is captured in models like Conway&amp;rsquo;s Life.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Complex Life system" src="http://media.giphy.com/media/tXlpbXfu7e2Pu/giphy.gif" /&gt;&lt;/p&gt;

&lt;p&gt;Studying complexity and emergence in Conway&amp;rsquo;s Life also reveals useful truths in designing everyday software systems. Although there are infinite possible simulations in Life, you quickly notice that all complex patterns are made up of just a few simple patterns that keep recurring.&lt;/p&gt;

&lt;p&gt;These useful patterns can be arranged in countless ways to compose more complex useful patterns. Complex patterns can then be combined as modules to make even more complex patterns. Sound familiar?&lt;/p&gt;

&lt;p&gt;In case these patterns seem pointless, it may be worth mentioning that Conway&amp;rsquo;s Life is &lt;a href="http://jeremykun.com/2011/06/30/turing-machines-and-conways-dreams/"&gt;Turing complete&lt;/a&gt;. As such, you can implement &lt;a href="https://www.youtube.com/watch?v=xP5-iIeKXE8"&gt;Conway&amp;rsquo;s Life in Conway&amp;rsquo;s Life&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This only scratches the surface of what can be gleaned from studying Conway&amp;rsquo;s Life. There are plenty of ways to play with Life simulations, including implementing one yourself. Here&amp;rsquo;s a &lt;a href="http://play.golang.org/p/nr2wehptjW"&gt;runnable Go implementation&lt;/a&gt; in about 100 lines.&lt;/p&gt;

&lt;p&gt;The glider pattern we reference is the smallest traveling pattern in Life, and one of the most useful building blocks. It&amp;rsquo;s often used as a symbol of Conway&amp;rsquo;s Life, but has also been adopted to &lt;a href="http://www.catb.org/hacker-emblem/faqs.html"&gt;represent the hacker ethic&lt;/a&gt;. This is a convenient symbolic addition for us.&lt;/p&gt;

&lt;p&gt;All of this gets at how we think about problems, design systems, and captures the realities of our field. This is why we are Glider Labs.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Glider pattern" src="http://media.giphy.com/media/wErVWADqta2oE/giphy.gif" /&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
